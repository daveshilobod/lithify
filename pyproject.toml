[build-system]
requires = ["setuptools>=69", "wheel>=0.41"]
build-backend = "setuptools.build_meta"

[project]
name = "lithify"
version = "0.1.0"
description = "Turn JSON Schemas into Pydantic models - from mutable to rock-solid immutable"
readme = "README.md"
requires-python = ">=3.11"
authors = [{ name = "Dave" }]
license = { text = "MIT" }
keywords = [
    "pydantic",
    "json-schema",
    "code-generation",
    "immutability",
    "models",
    "schema",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Code Generators",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    "pydantic>=2.5",
    "datamodel-code-generator>=0.25",
    "PyYAML>=6.0",
    "typer>=0.12",
    "email-validator>=2.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0",
    "pytest-cov>=4.0",
    "ruff>=0.6",
    "black>=24.0",
    "mypy>=1.10",
    "build>=1.2",
    "twine>=5.0",
]

formatting = [
    "ruff>=0.6",
    "black>=24.0",
]

[project.scripts]
lithify = "lithify.cli:app"

[project.urls]
Homepage = "https://github.com/daveshilobod/lithify"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
lithify = ["py.typed"]

[tool.black]
line-length = 120
target-version = ["py311"]

[tool.ruff]
line-length = 120
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by formatter)
    "B008",  # do not perform function calls in argument defaults
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["src"]
addopts = "--cov=src/lithify --cov-report=term-missing -v"
markers = [
    "integration: marks tests as integration tests (full pipeline)",
    "unit: marks tests as unit tests (component-level)",
    "slow: marks tests as slow running",
]
