# SPDX-License-Identifier: CC-BY-4.0
$schema: "https://json-schema.org/draft/2020-12/schema"
$id: "https://example.com/schemas/core/v1/common_types.schema.json"
title: "CommonTypes"
type: object
additionalProperties: false
description: "Shared scalar and utility definitions used across core contracts."
$defs:
  VersionString:
    type: string
    # Semantic version pattern (no tracing semantics implied)
    pattern: "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-[0-9A-Za-z.-]+)?(?:\\+[0-9A-Za-z.-]+)?$"
    description: "Semantic version, e.g., 1.0.0 or 2.1.3-beta+exp.sha."
  UuidLower:
    type: string
    pattern: "^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
    description: "RFC 4122 UUID, lowercase."
  IdHex16Or32:
    oneOf:
      - type: string
        pattern: "^[0-9a-f]{16}$"
        description: "16 hex characters."
      - type: string
        pattern: "^[0-9a-f]{32}$"
        description: "32 hex characters."
    description: "Identifier that may be 16 or 32 lowercase hex characters."
  IdHex16:
    type: string
    pattern: "^[0-9a-f]{16}$"
    description: "16 hex characters."
  Rfc3339Timestamp:
    type: string
    format: date-time
    description: "RFC 3339 / ISO 8601 timestamp."
  NonEmptyString:
    type: string
    minLength: 1
    description: "Any non-empty string."
  Sha256Hex:
    type: string
    pattern: "^[0-9a-f]{64}$"
    description: "SHA-256 digest hex, lowercase."
  # Extra fixtures to exercise JSON Pointer escapes and enum handling
  "Key~With~Tilde":
    type: string
    minLength: 1
    description: "Tests JSON Pointer unescaping of '~' via '~0'."
  "Path/With/Slash":
    type: string
    minLength: 1
    description: "Tests JSON Pointer unescaping of '/' via '~1'."
  CountryCode:
    type: string
    enum: ["US", "CA", "DE", "JP"]
    description: "Simple enum of uppercase country codes."

  # Email and URL formats
  Email:
    type: string
    format: email
    description: "Email address validation."
  HttpUrl:
    type: string
    format: uri
    pattern: "^https?://"
    description: "HTTP or HTTPS URL."

  # Numeric constraints
  Latitude:
    type: number
    minimum: -90
    maximum: 90
    description: "Geographic latitude."
  Longitude:
    type: number
    minimum: -180
    maximum: 180
    description: "Geographic longitude."
  UnixTimestamp:
    type: integer
    minimum: 0
    description: "Unix timestamp in seconds."
  Percentage:
    type: number
    minimum: 0
    maximum: 100
    multipleOf: 0.01
    description: "Percentage with two decimal places."
  PortNumber:
    type: integer
    minimum: 1
    maximum: 65535
    description: "Valid network port number."

  # Complex string patterns with combined constraints
  Username:
    type: string
    pattern: "^[a-zA-Z][a-zA-Z0-9_-]*$"
    minLength: 3
    maxLength: 30
    description: "Username with alphanumeric, underscore, hyphen."
  StrongPassword:
    type: string
    minLength: 12
    maxLength: 128
    pattern: "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])"
    description: "Password requiring uppercase, lowercase, digit, and special char."
  PhoneNumber:
    type: string
    pattern: "^\\+?[1-9]\\d{1,14}$"
    description: "E.164 format phone number."
  Tag:
    type: string
    pattern: "^[a-z][a-z0-9-]*$"
    maxLength: 32
    description: "Lowercase tag with hyphens."

  # Union types
  PortOrEnvVar:
    oneOf:
      - type: integer
        minimum: 1
        maximum: 65535
      - type: string
        pattern: "^\\$\\{[A-Z_]+\\}$"
    description: "Port number or environment variable reference."

  # Enums
  LogLevel:
    enum: ["debug", "info", "warn", "error", "fatal"]
    description: "Standard log levels."
